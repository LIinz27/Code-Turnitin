/* Minimal custom CSS. Most styling is done via Tailwind classes in index.html */

/* Custom scrollbar for webkit browsers (Chrome, Safari) */
/* This ensures the code panes have a scrollbar that is visually consistent */
.scrollbar-thin::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

.scrollbar-thin::-webkit-scrollbar-track {
    background: #4a5568; /* Tailwind gray-700-ish */
    border-radius: 10px;
}

.scrollbar-thin::-webkit-scrollbar-thumb {
    background-color: #6b7280; /* Tailwind gray-600-ish */
    border-radius: 10px;
    border: 2px solid #4a5568;
}

.scrollbar-thin::-webkit-scrollbar-thumb:hover {
    background-color: #9ca3af; /* Tailwind gray-400-ish */
}


/* Highlight.js Line Numbers and Custom Highlight Overlay */
/* Ensure these styles are explicit to work with Highlight.js output */

.code-pane pre code {
    /* Use display: block to enable counter-reset and full line background */
    display: block; 
    padding: 0 !important; /* Override default hljs padding */
}

.code-pane pre code > span { /* Targeting individual lines within <pre><code> */
    display: flex; /* Use flex to align line number and code content */
    align-items: flex-start; /* Align content to the top of the line */
    padding: 0.25rem 0.5rem; /* Padding for each line */
    min-height: 1.4em; /* Ensure consistent line height */
}

.code-pane pre code > span.line-number {
    flex-shrink: 0; /* Don't shrink line numbers */
    width: 3.5em; /* Fixed width for line numbers */
    text-align: right;
    color: #9ca3af; /* Light gray for line numbers */
    margin-right: 1rem;
    user-select: none; /* Prevent text selection on line numbers */
    -webkit-user-select: none;
    font-weight: normal;
    background-color: #374151; /* Darker background for line numbers */
    padding-right: 0.5rem;
    border-right: 1px solid #4b5563; /* Separator for line numbers */
}

.code-pane pre code > span.line-content {
    flex-grow: 1; /* Allow code content to fill remaining space */
    white-space: pre-wrap; /* Ensure text wraps */
    word-break: break-all; /* Break long words */
}

.code-pane pre code > span.line-content.highlight-code-line {
    background-color: #fbbf24 !important; /* Brighter yellow (Tailwind yellow-400) */
    color: #1f2937 !important; /* Darker text for contrast on highlight */
    font-weight: 600; /* Make highlighted text bold */
}

/* Ensure highlight.js default classes don't interfere with our line numbering */
.code-pane pre code .hljs-ln-numbers,
.code-pane pre code .hljs-ln-line {
    background-color: transparent !important;
    color: inherit !important;
    border: none !important;
}

/* Modal Styles - Crucial for proper display and hiding */
.modal {
    /* Base display: none; will come from Tailwind's 'hidden' class */
    /* Added hidden class back to index.html to control initial display */
    /* When JS removes 'hidden', it becomes 'flex' and then transitions opacity/visibility */
    /* pointer-events handled by JS for precise control */
    display: none; /* Initial state, will be overridden by JS */
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.6);
    padding: 20px;
    align-items: center;
    justify-content: center;
    
    /* These transitions are triggered by adding/removing 'show' class */
    opacity: 0; 
    visibility: hidden;
    pointer-events: none; /* Prevents clicks when hidden/fading out */
    transition: opacity 0.3s ease-out, visibility 0.3s ease-out;
}

.modal.show {
    /* This makes the modal visible and correctly laid out */
    display: flex; /* Overrides display:none from base .modal */
    opacity: 1;
    visibility: visible;
    pointer-events: auto; /* Allows clicks when visible */
}

.modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 90%;
    max-width: 1200px;
    border-radius: 10px;
    position: relative;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
    transform: scale(0.95); /* Start slightly smaller for transition effect */
    opacity: 0; /* Initially hidden even if display:flex for transition */
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
}

.modal.show .modal-content {
    transform: scale(1); /* Scale to normal size when shown */
    opacity: 1;
}


.close-button {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close-button:hover,
.close-button:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

.code-display-container {
    display: flex;
    flex-direction: column; /* Default to column for small screens */
    gap: 15px;
    margin-top: 20px;
    height: calc(100% - 150px); /* Adjust height to allow modal content to scroll if needed */
}

@media (min-width: 768px) { /* On medium screens and up, make it row */
    .code-display-container {
        flex-direction: row;
    }
}


.code-pane {
    flex: 1; /* Each pane takes equal width */
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden; /* Prevent content from spilling */
    display: flex; /* Use flexbox to make pre fill remaining space */
    flex-direction: column; /* Stack h3 and pre */
    max-height: 100%; /* Ensure code-pane fits within container */
    background-color: #f9f9f9;
}

.code-pane h3 {
    text-align: center;
    margin: 0; /* Remove default margin */
    padding: 10px 0; /* Add padding for title */
    color: #007bff;
}

.code-pane pre {
    flex: 1; /* Allow pre to fill remaining vertical space */
    margin: 0;
    padding: 10px;
    font-size: 0.9em;
    line-height: 1.4;
    white-space: pre-wrap; /* Wrap long lines */
    word-break: break-all; /* Break words to prevent overflow */
    overflow-y: auto; /* Enable scrolling for pre content */
}